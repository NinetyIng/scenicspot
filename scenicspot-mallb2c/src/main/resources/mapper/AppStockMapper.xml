<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ythd.ower.b2c.mapper.AppProductStockMapper">

   <resultMap id="StockReturn" type="com.ythd.ower.b2c.model.ProductStockModel">
       <id property="id" column="SKU_ID" jdbcType="INTEGER" ></id>
       <result property="goodsId" column="GOODS_ID" jdbcType="VARCHAR"></result>
       <result property="marketPrice" column="MARKET_PRICE" jdbcType="VARCHAR"></result>
       <result property="price" column="PRICE" jdbcType="VARCHAR"></result>
       <result property="stock" column="STOCK" jdbcType="VARCHAR"></result>
       <result property="saleAttr" column="ATTR_JSON" jdbcType="VARCHAR"></result>
       <result property="barCode" column="BAR_CODE" jdbcType="VARCHAR"></result>
       <result property="stockAlarm" column="STOCK_ALARM" jdbcType="VARCHAR"></result>
       <result property="goodsName" column="GOODS_NAME" jdbcType="VARCHAR"></result>
       <result property="listImg" column="LIST_IMG" jdbcType="VARCHAR"></result>
   </resultMap>
    <resultMap id="ProductInfo" type="com.ythd.ower.b2c.model.ProductOrderGoodsModel">
        <id property="id" column="order_goods_id" jdbcType="INTEGER" ></id>
        <result property="orderId" column="order_id" jdbcType="INTEGER"></result>
        <result property="productId" column="goods_id" jdbcType="INTEGER"></result>
        <result property="goodsName" column="goods_name" jdbcType="VARCHAR"></result>
        <result property="productSn" column="goods_sn" jdbcType="VARCHAR"></result>
        <result property="productCount" column="goods_count" jdbcType="VARCHAR"></result>
        <result property="productPrice" column="goods_price" jdbcType="VARCHAR"></result>
        <result property="skuId" column="goods_sku_id" jdbcType="INTEGER"></result>
        <result property="productAttr" column="goods_attr" jdbcType="VARCHAR"></result>
        <result property="refund" column="is_refund" jdbcType="INTEGER"></result>
    </resultMap>
    <!--根据商品id查找库存 返回库存列表 -->
    <select id="findStockListByGoodsId" parameterType="java.lang.Integer" resultMap="StockReturn">
        SELECT SKU_ID,GOODS_ID,MARKET_PRICE,PRICE,ATTR_JSON,STOCK,BAR_CODE,STOCK_ALARM
        FROM T_GOODS_SKU  WHERE GOODS_ID = #{productId}
    </select>
    <select id="findByAttrValues" resultMap="StockReturn">
        SELECT SKU_ID,GOODS_ID,MARKET_PRICE,PRICE,ATTR_JSON,STOCK,BAR_CODE,STOCK_ALARM
        FROM T_GOODS_SKU  WHERE ATTR_JSON = #{attrVals} AND GOODS_ID = #{productId}
    </select>
    <select id="findStockByIds" parameterType="java.util.List" resultMap="StockReturn">
        SELECT t1.SKU_ID,t1.GOODS_ID,t1.PRICE,t1.ATTR_JSON,t1.STOCK,t2.GOODS_NAME,t2.LIST_IMG
        FROM T_GOODS_SKU t1 INNER  JOIN  T_GOODS t2 on t1.GOODS_ID = t2.GOODS_ID
        WHERE SKU_ID  IN
        <foreach collection="idList" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>
    <select id="findProductInfoByStuIds" parameterType="java.util.List" resultMap="ProductInfo">
        SELECT  t1.price as goods_price,t1.sku_id as goods_sku_id,t1.attr_json as goods_attr,
        t2.goods_name,t2.goods_id,t2.goods_sn,t2.list_img
        FROM T_GOODS_SKU t1 INNER  JOIN T_GOODS t2 ON  t1.GOODS_ID = t2.GOODS_ID
        WHERE SKU_ID IN
        <foreach collection="idList" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

</mapper>